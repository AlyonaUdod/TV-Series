{"version":3,"sources":["SerialsList/SerialsList.module.css","SeachForm/SeachForm.module.css","ListItem/ListItem.module.css","redux/actions/types.js","redux/reducers/index.js","redux/reducers/TVSerialsListReducer.js","redux/reducers/queryTextReducer.js","redux/reducers/errorReducer.js","redux/reducers/currentSerialReducer.js","redux/store/store.js","redux/actions/queryTextAction.js","redux/actions/TVSerialsListAction.js","redux/api/apiTVMaze.js","redux/actions/errorAction.js","SeachForm/SeachForm.jsx","redux/actions/currentSerialAction.js","ListItem/ListItem.jsx","SerialsList/SerialsList.jsx","SerialInfo/Info.jsx","SerialInfo/SerialInfo.jsx","App.js","serviceWorker.js","index.js","SerialInfo/SerialInfo.module.css"],"names":["module","exports","wrapper","form","listContent","SEACH_VIDEO","CLEAR_SEACH_VIDEO","HANDLER_CHANGE","CLEAR_INPUT","ADD_ERROR","CLEAR_ERROR","ADD_CURRENT_SERIAL","CLEAR_CURRENT_SERIAL","rootReducers","combineReducers","TVSerialsList","state","arguments","length","undefined","action","type","actionTypes","payload","queryText","queryError","currentSerial","store","createStore","compose","applyMiddleware","thunk","clearInput","queryTVSerials","param","dispatch","axios","get","concat","getSerialsList","then","res","data","catch","err","console","error","clearQueryError","withRouter","connect","seachSerials","handlerInputChange","value","handlerChange","clearSeachInput","clearError","_ref","seachSerialsTVMaze","e","preventDefault","react_default","a","createElement","Form","className","styles","onSubmit","Divider","horizontal","Header","as","Icon","name","Field","Input","style","fontSize","placeholder","icon","autoFocus","onChange","target","onKeyDown","keyCode","Button","positive","negative","onClick","Message","color","addCurrentSerial","obj","getCurrentSerial","image","title","id","List","Item","display","alignItems","cS","find","el","show","getSerial","Image","src","medium","width","height","Content","marginLeft","moveBack","selection","list","map","src_ListItem_ListItem","key","Info","Fragment","marginTop","Table","definition","Body","Row","Cell","fontWeight","genres","join","rating","average","network","webChannel","language","premiered","split","officialSite","href","rel","summary","overflow","contentEditable","dangerouslySetInnerHTML","__html","TVSL","card","score","SerialInfo_Info","animated","verticalAlign","cursor","window","scrollTo","App","moveBackToSeach","_this","props","history","push","clearStore","this","nextProps","_this2","react_router","path","component","SeachForm","render","src_SerialsList_SerialsList","Object","assign","src_SerialInfo_SerialInfo","Component","Boolean","location","hostname","match","ReactDOM","es","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c14ea64b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SerialsList_wrapper__3fTTD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SeachForm_form___f3WS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContent\":\"ListItem_listContent__Ia0mP\"};","export const SEACH_VIDEO = 'GET/ Seaching TV Serials';\r\nexport const CLEAR_SEACH_VIDEO = 'CLEAR/ Clear seaching TV Serials';\r\n\r\nexport const HANDLER_CHANGE = 'INPUT/ Handler change';\r\nexport const CLEAR_INPUT = 'INPUT/ Clear input';\r\n\r\nexport const ADD_ERROR = 'ERROR/ Seach error';\r\nexport const CLEAR_ERROR = 'ERROR/ Clear error';\r\n\r\nexport const ADD_CURRENT_SERIAL = 'ADD/ Add Current Serial to store';\r\nexport const CLEAR_CURRENT_SERIAL = 'CLEAR/ Clear Current Serial from store';","import {combineReducers} from 'redux';\nimport TVSerialsList from './TVSerialsListReducer';\nimport queryText from './queryTextReducer';\nimport queryError from './errorReducer';\nimport currentSerial from './currentSerialReducer';\n\nconst rootReducers = combineReducers({\n    TVSerialsList,\n    queryText,\n    queryError,\n    currentSerial,\n});\n\nexport default rootReducers;","import * as actionTypes from '../actions/types';\r\n\r\nexport default function TVSerialsList(state=[], action) {\r\n    switch (action.type){\r\n        case actionTypes.SEACH_VIDEO:\r\n            return action.payload;\r\n        case actionTypes.CLEAR_SEACH_VIDEO:\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    };\r\n};","import * as actionTypes from '../actions/types';\r\n\r\nexport default function queryText(state='', action){\r\n    switch (action.type) {\r\n        case actionTypes.HANDLER_CHANGE:\r\n            return action.payload;\r\n        case actionTypes.CLEAR_INPUT:\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    };\r\n};","import * as actionTypes from '../actions/types';\r\n\r\nexport default function queryError(state='', action){\r\n    switch (action.type) {\r\n        case actionTypes.ADD_ERROR:\r\n            return action.payload;\r\n        case actionTypes.CLEAR_ERROR:\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    };\r\n};","import * as actionTypes from '../actions/types';\r\n\r\nexport default function currentSerial(state={}, action){\r\n    switch (action.type) {\r\n        case actionTypes.ADD_CURRENT_SERIAL:\r\n            return action.payload;\r\n        case actionTypes.CLEAR_CURRENT_SERIAL:\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    };\r\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducers from '../reducers/index.js';\nimport thunk from 'redux-thunk';\n\n// const DevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst store = createStore(rootReducers, compose(applyMiddleware(thunk)));\n\nexport default store;","import * as actionTypes from './types';\r\n\r\nexport function handlerChange(value) {\r\n    return {\r\n       type: actionTypes.HANDLER_CHANGE, \r\n       payload: value,\r\n    };\r\n};\r\n\r\nexport function clearInput(){\r\n    return {\r\n        type: actionTypes.CLEAR_INPUT,\r\n        payload: '',\r\n    };\r\n};","import * as actionTypes from '../actions/types';\r\nimport { getSerialsList } from '../api/apiTVMaze';\r\n\r\nexport const queryTVSerials = (param) => dispatch => {\r\n    return getSerialsList(param)\r\n        .then(res => dispatch(seachVideo(res.data)))\r\n        .catch(err=> console.error(err));\r\n};\r\n\r\nexport function seachVideo(data) {\r\n    if(data.length !== 0){\r\n        return {\r\n            type: actionTypes.SEACH_VIDEO, \r\n            payload: data,\r\n         };\r\n    } else {\r\n        return {\r\n            type: actionTypes.ADD_ERROR, \r\n            payload: 'No TV Serial was found, try again',\r\n         };\r\n    };\r\n};\r\n\r\nexport function clearSeach(){\r\n    return {\r\n        type: actionTypes.CLEAR_SEACH_VIDEO,\r\n        payload: [],\r\n    };\r\n};","import axios from 'axios';\r\n\r\nexport function getSerialsList(param){\r\n    return (axios.get(`https://api.tvmaze.com/search/shows?q=${param}`));\r\n};","import * as actionTypes from './types';\r\n\r\nexport function getQueryError(){\r\n    return {\r\n        type: actionTypes.ADD_ERROR,\r\n        payload: 'No TV Serial was found, try again',\r\n    };\r\n};\r\n\r\nexport function clearQueryError(){\r\n    return {\r\n        type: actionTypes.CLEAR_ERROR,\r\n        payload: '',\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Form, Input, Message, Divider, Header, Icon } from 'semantic-ui-react';\r\nimport styles from './SeachForm.module.css';\r\nimport { handlerChange, clearInput } from '../redux/actions/queryTextAction';\r\nimport { queryTVSerials } from '../redux/actions/TVSerialsListAction';\r\nimport {  clearQueryError } from '../redux/actions/errorAction';\r\n\r\nconst SeachForm = ({handlerInputChange, clearSeachInput, queryText, seachSerials, queryError, clearError}) => {\r\n\r\n    function handlerChange(e){\r\n        handlerInputChange(e.target.value);\r\n    };\r\n\r\n    function clearSeach(){\r\n        clearSeachInput();\r\n        clearError();\r\n    };\r\n\r\n    function seachSerialsTVMaze(e){\r\n        if(queryText){\r\n            e.preventDefault();\r\n            seachSerials(queryText);\r\n        };\r\n    };\r\n\r\n    function handleKeyDown(e){\r\n        if(e.keyCode === 13){\r\n            seachSerialsTVMaze(e);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Form className={styles.form} onSubmit={seachSerialsTVMaze}>\r\n            <Divider horizontal>\r\n                <Header as='h2'>\r\n                    <Icon name='film'/>\r\n                    Seach\r\n                </Header>\r\n            </Divider>\r\n            <Form.Field>\r\n                <Input style={{fontSize:'1.2rem'}} placeholder='Enter TV Serials title...'  icon='search' autoFocus value={queryText} onChange={handlerChange}  onKeyDown = {handleKeyDown}/>\r\n            </Form.Field>\r\n            <Button type='submit' positive>Seach</Button>\r\n            <Button type='reset' negative onClick={clearSeach}>Reset</Button>\r\n            {queryError && \r\n            <Message color='grey'>\r\n                <Message.Header as='h6'>{queryError}</Message.Header>\r\n            </Message>}\r\n            <Divider/>\r\n        </Form>\r\n    );\r\n};\r\n\r\nfunction MSTP (state){\r\n    return {\r\n        queryText: state.queryText,\r\n        queryError: state.queryError,\r\n    };\r\n};\r\n\r\nfunction MDTP (dispatch) {\r\n    return {\r\n        seachSerials: function(param){\r\n            dispatch(queryTVSerials(param));\r\n        },\r\n        handlerInputChange: function(value){\r\n            dispatch(handlerChange(value));\r\n        },\r\n        clearSeachInput: function(){\r\n            dispatch(clearInput());\r\n        },\r\n        clearError: function(){\r\n            dispatch(clearQueryError());\r\n        }\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(MSTP, MDTP)(SeachForm));","import * as actionTypes from './types';\r\n\r\nexport function addCurrentSerial(obj){\r\n    return {\r\n        type: actionTypes.ADD_CURRENT_SERIAL,\r\n        payload: obj,\r\n    };\r\n};\r\n\r\nexport function clearCurrentSerial(){\r\n    return {\r\n        type: actionTypes.CLEAR_CURRENT_SERIAL,\r\n        payload: {},\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Image, List, Button } from 'semantic-ui-react';\r\nimport { addCurrentSerial } from '../redux/actions/currentSerialAction';\r\nimport styles from './ListItem.module.css';\r\n\r\nconst ListItem = ({image, title, id, TVSerialsList, getCurrentSerial}) => {\r\n\r\n    function getSerial(id){\r\n        let cS = TVSerialsList.find(el => el.show.id === id);\r\n        getCurrentSerial(cS);\r\n    };\r\n\r\n    return (\r\n    <List.Item style={{display: 'flex', alignItems: 'center'}} onClick={() => getSerial(id)}>  \r\n        <div className={styles.listContent}>\r\n        {image ? <Image src={image.medium}/> :\r\n         <Image width='100' height='140' src='https://wingslax.com/wp-content/uploads/2017/12/no-image-available.png'/>\r\n         }\r\n            <List.Content style={{ marginLeft: '2rem'}}>\r\n                <List.Header style={{fontSize: '1.3rem'}}>{title}</List.Header>\r\n            </List.Content>\r\n        </div>\r\n        <Button  color='red' style={{width: '15%'}}>READ MORE</Button>\r\n    </List.Item>\r\n    );\r\n};\r\n\r\nfunction MSTP (state){\r\n    return {\r\n      TVSerialsList: state.TVSerialsList,\r\n    };\r\n};\r\n\r\nfunction MDTP (dispatch) {\r\n    return {\r\n        getCurrentSerial: function(obj){\r\n            dispatch(addCurrentSerial(obj));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(MSTP, MDTP)(ListItem);","import React from 'react';\r\nimport { List, Header, Button, Divider, Icon} from 'semantic-ui-react';\r\nimport {connect} from 'react-redux';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport styles from './SerialsList.module.css';\r\n\r\nconst SerialsList = ({moveBack, TVSerialsList}) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Button color='teal' onClick={moveBack}>Back</Button>\r\n            <List selection className={styles.list}>\r\n            <Divider horizontal>\r\n                <Header as='h2'>\r\n                    <Icon name='film'/>\r\n                    TV Serials List\r\n                </Header>\r\n            </Divider>\r\n                {TVSerialsList.length > 0 && TVSerialsList.map(el => <ListItem key={el.show.id} title={el.show.name} image={el.show.image} id={el.show.id}/> )}\r\n            </List>\r\n            <Divider/>\r\n        </div>   \r\n    );\r\n};\r\n\r\nfunction MSTP (state){\r\n    return {\r\n        TVSerialsList: state.TVSerialsList,\r\n    };\r\n};\r\n\r\nexport default connect(MSTP,null)(SerialsList);","import React from 'react';\r\nimport { Divider, Header, Icon, Table, Image } from 'semantic-ui-react';\r\nimport styles from './SerialInfo.module.css';\r\n\r\nconst Info = ({cS}) => {\r\n    return (\r\n        <React.Fragment>\r\n        <Divider horizontal>\r\n            <Header as='h3'>\r\n                <Icon name='film'/>\r\n                About\r\n            </Header>\r\n        </Divider>\r\n            <div className={styles.wrapper}>\r\n                <Image src={cS.show.image ? cS.show.image.medium : 'https://wingslax.com/wp-content/uploads/2017/12/no-image-available.png' } style={{marginTop:'1rem', height: '295px'}} />\r\n                <Table definition>\r\n                    <Table.Body>\r\n                        <Table.Row>\r\n                            <Table.Cell>Title</Table.Cell>\r\n                            <Table.Cell style={{fontSize: '1.5rem', fontWeight: '700'}}> {cS.show.name}</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Genres</Table.Cell>\r\n                            <Table.Cell style={{fontWeight: '700'}}>{cS.show.genres.length > 0 ? cS.show.genres.join(', ') : '---'}</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell width={3}>Rating</Table.Cell>\r\n                            <Table.Cell style={{fontWeight: '700'}}>{cS.show.rating.average ? cS.show.rating.average : '---'}</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Network</Table.Cell>\r\n                            <Table.Cell><span style={{fontWeight: '700'}}>{cS.show.network ? cS.show.network.name : cS.show.webChannel ? cS.show.webChannel.name : '---'}</span>, {cS.show.language}.</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Year</Table.Cell>\r\n                            <Table.Cell><span style={{fontWeight: '700'}}>{cS.show.premiered ? cS.show.premiered.split('-')[0] : '---'}</span></Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell> OfficialSite</Table.Cell>\r\n                            <Table.Cell style={{fontWeight: '700'}}>{cS.show.officialSite ? <a href={cS.show.officialSite} target=\"_blank\" rel=\"noopener noreferrer\">Go to webSite</a> : '---'}</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Description</Table.Cell>\r\n                            <Table.Cell>{cS.show.summary ? <div style={{height: '8rem', overflow: 'auto'}} contentEditable='true' dangerouslySetInnerHTML={{ __html: `${cS.show.summary}`}}></div> : '---' } </Table.Cell>\r\n                        </Table.Row>\r\n                    </Table.Body>\r\n                </Table>\r\n            </div>\r\n</React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, List, Image, Divider, Header, Icon } from 'semantic-ui-react';\r\nimport Info from './Info';\r\nimport { addCurrentSerial } from '../redux/actions/currentSerialAction';\r\nimport styles from './SerialInfo.module.css';\r\n\r\nconst SerialInfo = ({cS, TVSL, moveBack, getCurrentSerial}) => {\r\n\r\n    function getSerial(id){\r\n        if(cS.show.id !== id){\r\n            window.scrollTo(0, 0);\r\n            let cS = TVSL.find(el => el.show.id === id);\r\n            getCurrentSerial(cS);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={styles.card}>    \r\n            <Button color='teal' onClick={moveBack}>Back to Seach</Button> \r\n            {cS.score && <Info cS={cS}/>}\r\n            <Divider horizontal>\r\n                <Header as='h3'>\r\n                    <Icon name='film'/>\r\n                    TV Serials List\r\n                </Header>\r\n            </Divider>\r\n            <List animated verticalAlign='middle'>\r\n            { TVSL.length > 0 && TVSL.map(el => \r\n                <List.Item key={el.show.id} style={{cursor:'pointer'}} onClick={() => getSerial(el.show.id)}>\r\n                    <Image src={el.show.image ? el.show.image.medium : 'https://wingslax.com/wp-content/uploads/2017/12/no-image-available.png'} style={{width: '4rem'}} />\r\n                    <List.Content>\r\n                        <List.Header>{el.show.name}</List.Header>\r\n                    </List.Content>\r\n                </List.Item>\r\n            )}\r\n            </List>\r\n            <Divider/>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction MSTP (state){\r\n    return {\r\n      cS: state.currentSerial,\r\n      TVSL: state.TVSerialsList,\r\n    };\r\n};\r\n\r\nfunction MDTP (dispatch) {\r\n    return {\r\n        getCurrentSerial: function(obj){\r\n            dispatch(addCurrentSerial(obj));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(MSTP, MDTP)(SerialInfo);","import React, { Component } from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SeachForm from './SeachForm/SeachForm';\nimport SerialsList from './SerialsList/SerialsList';\nimport SerialInfo from './SerialInfo/SerialInfo';\nimport { clearInput } from './redux/actions/queryTextAction';\nimport { clearSeach } from './redux/actions/TVSerialsListAction';\nimport { clearQueryError } from './redux/actions/errorAction';\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount(){\n    if(this.props.TVSerialsList.length === 0 && !this.props.currentSerial.score){\n      this.props.history.push('/seach')\n    }\n  }\n\n  componentDidUpdate(nextProps){\n    if(nextProps.TVSerialsList.length !== this.props.TVSerialsList.length && this.props.TVSerialsList[0] ) {\n       this.props.history.push('/list');\n       this.props.clearError();\n       window.scrollTo(0, 0);\n    }\n    if(this.props.currentSerial.score && nextProps.currentSerial.score !== this.props.currentSerial.score){\n        this.props.history.push('/info');\n        window.scrollTo(0, 0);\n    }\n  }\n\n  moveBackToSeach = () => {\n    this.props.history.push('/seach');\n    this.props.clearStore();\n    this.props.clearSeachInput();\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route path='/seach' component={SeachForm}/>\n        <Route path='/list' render={(props) => <SerialsList {...props} moveBack={this.moveBackToSeach}/>}/>\n        <Route path='/info' render={(props) => <SerialInfo {...props} moveBack={this.moveBackToSeach}/>}/>\n      </Switch>\n    );\n  };\n};\n\nfunction MSTP (state){\n  return {\n    TVSerialsList: state.TVSerialsList,\n    currentSerial: state.currentSerial,\n  };\n};\n\nfunction MDTP (dispatch) {\n  return {\n      clearStore: function(){\n          dispatch(clearSeach());\n      },\n      clearSeachInput: function(){\n          dispatch(clearInput());\n      },\n      clearError: function(){\n        dispatch(clearQueryError());\n      }\n  };\n};\n\nexport default withRouter(connect(MSTP, MDTP)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from './redux/store/store';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport './normalize.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SerialInfo_card___jqKw\",\"wrapper\":\"SerialInfo_wrapper__x81lM\"};"],"sourceRoot":""}